{
  "id": "https://schema.management.azure.com/schemas/2017-07-01-preview/Microsoft.ServiceFabric.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.ServiceFabric",
  "description": "Microsoft ServiceFabric Resource Types",
  "resourceDefinitions": {
    "clusters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the cluster resource"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/clusters"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-07-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/definitions/ClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The cluster resource properties"
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/clusters_applications_childResource"
              },
              {
                "$ref": "#/definitions/clusters_applicationTypes_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabric/clusters"
    },
    "clusters_applications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the application resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/clusters/applications"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-07-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/definitions/ApplicationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/clusters_applications_services_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabric/clusters/applications"
    },
    "clusters_applications_services": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the service resource in the format of {applicationName}~{serviceName}."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/clusters/applications/services"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-07-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/definitions/ServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabric/clusters/applications/services"
    },
    "clusters_applicationTypes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the application type name resource"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/clusters/applicationTypes"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-07-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/definitions/ApplicationTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/clusters_applicationTypes_versions_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabric/clusters/applicationTypes"
    },
    "clusters_applicationTypes_versions": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The application type version."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/clusters/applicationTypes/versions"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-07-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/definitions/VersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabric/clusters/applicationTypes/versions"
    }
  },
  "definitions": {
    "ApplicationHealthPolicy": {
      "type": "object",
      "properties": {
        "ConsiderWarningAsError": {
          "anyOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether warnings are treated with the same severity as errors."
        },
        "MaxPercentUnhealthyDeployedApplications": {
          "anyOf": [
            {
              "type": "integer",
              "default": "0"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
        },
        "DefaultServiceTypeHealthPolicy": {
          "anyOf": [
            {
              "$ref": "#/definitions/ServiceTypeHealthPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "ServiceTypeHealthPolicyMap": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceTypeHealthPolicyMapItem"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        }
      },
      "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n"
    },
    "ApplicationMetricDescription": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "The name of the metric."
        },
        "MaximumCapacity": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum node capacity for Service Fabric application.\nThis is the maximum Load for an instance of this application on a single node. Even if the capacity of node is greater than this value, Service Fabric will limit the total load of services within the application on each node to this value.\nIf set to zero, capacity for this metric is unlimited on each node.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\nWhen updating existing application with application capacity, the product of MaximumNodes and this value must always be smaller than or equal to TotalApplicationCapacity.\n"
        },
        "ReservationCapacity": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The node reservation capacity for Service Fabric application.\nThis is the amount of load which is reserved on nodes which have instances of this application.\nIf MinimumNodes is specified, then the product of these values will be the capacity reserved in the cluster for the application.\nIf set to zero, no capacity is reserved for this metric.\nWhen setting application capacity or when updating application capacity; this value must be smaller than or equal to MaximumCapacity for each metric.\n"
        },
        "TotalApplicationCapacity": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The total metric capacity for Service Fabric application.\nThis is the total metric capacity for this application in the cluster. Service Fabric will try to limit the sum of loads of services within the application to this value.\nWhen creating a new application with application capacity defined, the product of MaximumNodes and MaximumCapacity must always be smaller than or equal to this value.\n"
        }
      },
      "description": "Describes capacity information for a custom resource balancing metric. This can be used to limit the total consumption of this metric by the services of this application.\n"
    },
    "ApplicationParameter": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The name of the parameter."
        },
        "Value": {
          "type": "string",
          "description": "The value of the parameter."
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "description": "Describes an application parameter override to be applied when creating or upgrading an application."
    },
    "ApplicationProperties": {
      "type": "object",
      "properties": {
        "typeVersion": {
          "type": "string"
        },
        "parameters": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationParameter"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "upgradePolicy": {
          "anyOf": [
            {
              "$ref": "#/definitions/ApplicationUpgradePolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "minimumNodes": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The minimum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. If this property is set to zero, no capacity will be reserved. The value of this property cannot be more than the value of the MaximumNodes property."
        },
        "maximumNodes": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0,
              "default": "0"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum number of nodes where Service Fabric will reserve capacity for this application. Note that this does not mean that the services of this application will be placed on all of those nodes. By default, the value of this property is zero and it means that the services can be placed on any node."
        },
        "removeApplicationCapacity": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The version of the application type"
        },
        "metrics": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationMetricDescription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "typeName": {
          "type": "string"
        }
      },
      "description": "The application resource properties."
    },
    "ApplicationTypeProperties": {
      "type": "object",
      "description": "The application type name properties"
    },
    "ApplicationUpgradePolicy": {
      "type": "object",
      "properties": {
        "upgradeReplicaSetCheckTimeout": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "forceRestart": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "rollingUpgradeMonitoringPolicy": {
          "anyOf": [
            {
              "$ref": "#/definitions/RollingUpgradeMonitoringPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "applicationHealthPolicy": {
          "anyOf": [
            {
              "$ref": "#/definitions/ApplicationHealthPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        }
      },
      "description": "Describes the policy for a monitored application upgrade."
    },
    "AzureActiveDirectory": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Azure active directory tenant id."
        },
        "clusterApplication": {
          "type": "string",
          "description": "Azure active directory cluster application id."
        },
        "clientApplication": {
          "type": "string",
          "description": "Azure active directory client application id."
        }
      },
      "description": "The settings to enable AAD authentication on the cluster."
    },
    "CertificateDescription": {
      "type": "object",
      "properties": {
        "thumbprint": {
          "type": "string",
          "description": "Thumbprint of the primary certificate."
        },
        "thumbprintSecondary": {
          "type": "string",
          "description": "Thumbprint of the secondary certificate."
        },
        "x509StoreName": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "AddressBook",
                "AuthRoot",
                "CertificateAuthority",
                "Disallowed",
                "My",
                "Root",
                "TrustedPeople",
                "TrustedPublisher"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The local certificate store location."
        }
      },
      "required": [
        "thumbprint"
      ],
      "description": "Describes the certificate details."
    },
    "ClientCertificateCommonName": {
      "type": "object",
      "properties": {
        "isAdmin": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
        },
        "certificateCommonName": {
          "type": "string",
          "description": "The common name of the client certificate."
        },
        "certificateIssuerThumbprint": {
          "type": "string",
          "description": "The issuer thumbprint of the client certificate."
        }
      },
      "required": [
        "isAdmin",
        "certificateCommonName",
        "certificateIssuerThumbprint"
      ],
      "description": "Describes the client certificate details using common name."
    },
    "ClientCertificateThumbprint": {
      "type": "object",
      "properties": {
        "isAdmin": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
        },
        "certificateThumbprint": {
          "type": "string",
          "description": "The thumbprint of the client certificate."
        }
      },
      "required": [
        "isAdmin",
        "certificateThumbprint"
      ],
      "description": "Describes the client certificate details using thumbprint."
    },
    "ClusterHealthPolicy": {
      "type": "object",
      "properties": {
        "maxPercentUnhealthyNodes": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of unhealthy nodes before reporting an error. For example, to allow 10% of nodes to be unhealthy, this value would be 10. "
        },
        "maxPercentUnhealthyApplications": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of unhealthy applications before reporting an error. For example, to allow 10% of applications to be unhealthy, this value would be 10. "
        }
      },
      "description": "Defines a health policy used to evaluate the health of the cluster or of a cluster node."
    },
    "ClusterProperties": {
      "type": "object",
      "properties": {
        "availableClusterVersions": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterVersionDetails"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The Service Fabric runtime versions available for this cluster."
        },
        "clusterState": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "WaitingForNodes",
                "Deploying",
                "BaselineUpgrade",
                "UpdatingUserConfiguration",
                "UpdatingUserCertificate",
                "UpdatingInfrastructure",
                "EnforcingClusterVersion",
                "UpgradeServiceUnreachable",
                "AutoScale",
                "Ready"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "clusterCodeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
        },
        "certificate": {
          "anyOf": [
            {
              "$ref": "#/definitions/CertificateDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The certificate to use for securing the cluster. The certificate provided will be used for  node to node security within the cluster, SSL certificate for cluster management endpoint and default  admin client."
        },
        "reliabilityLevel": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Bronze",
                "Silver",
                "Gold",
                "Platinum"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "upgradeMode": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "Automatic",
                "Manual"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "clientCertificateThumbprints": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientCertificateThumbprint"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The list of client certificates referenced by thumbprint that are allowed to manage the cluster."
        },
        "clientCertificateCommonNames": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientCertificateCommonName"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The list of client certificates referenced by common name that are allowed to manage the cluster."
        },
        "fabricSettings": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SettingsSectionDescription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The list of custom fabric settings to configure the cluster."
        },
        "reverseProxyCertificate": {
          "anyOf": [
            {
              "$ref": "#/definitions/CertificateDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The server certificate used by reverse proxy."
        },
        "managementEndpoint": {
          "type": "string",
          "description": "The http management endpoint of the cluster."
        },
        "nodeTypes": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NodeTypeDescription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The list of node types in the cluster."
        },
        "azureActiveDirectory": {
          "anyOf": [
            {
              "$ref": "#/definitions/AzureActiveDirectory"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The AAD authentication settings of the cluster."
        },
        "vmImage": {
          "type": "string",
          "description": "The VM image VMSS has been configured with. Generic names such as Windows or Linux can be used."
        },
        "diagnosticsStorageAccountConfig": {
          "anyOf": [
            {
              "$ref": "#/definitions/DiagnosticsStorageAccountConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The storage account information for storing Service Fabric diagnostic logs."
        },
        "upgradeDescription": {
          "anyOf": [
            {
              "$ref": "#/definitions/ClusterUpgradePolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The policy to use when upgrading the cluster."
        },
        "addOnFeatures": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "RepairManager",
                  "DnsService",
                  "BackupRestoreService"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The list of add-on features to enable in the cluster."
        }
      },
      "required": [
        "managementEndpoint",
        "nodeTypes"
      ],
      "description": "Describes the cluster resource properties."
    },
    "clusters_applications_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the application resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "applications"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-07-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/definitions/ApplicationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/clusters_applications_services_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabric/clusters/applications"
    },
    "clusters_applications_services_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the service resource in the format of {applicationName}~{serviceName}."
        },
        "type": {
          "type": "string",
          "enum": [
            "services"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-07-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/definitions/ServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabric/clusters/applications/services"
    },
    "clusters_applicationTypes_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the application type name resource"
        },
        "type": {
          "type": "string",
          "enum": [
            "applicationTypes"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-07-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/definitions/ApplicationTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/clusters_applicationTypes_versions_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabric/clusters/applicationTypes"
    },
    "clusters_applicationTypes_versions_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The application type version."
        },
        "type": {
          "type": "string",
          "enum": [
            "versions"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-07-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/definitions/VersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabric/clusters/applicationTypes/versions"
    },
    "ClusterUpgradeDeltaHealthPolicy": {
      "type": "object",
      "properties": {
        "maxPercentDeltaUnhealthyNodes": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the nodes at the beginning of upgrade and the state of the nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits."
        },
        "maxPercentUpgradeDomainDeltaUnhealthyNodes": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of upgrade domain nodes health degradation allowed during cluster upgrades. The delta is measured between the state of the upgrade domain nodes at the beginning of upgrade and the state of the upgrade domain nodes at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion for all completed upgrade domains to make sure the state of the upgrade domains is within tolerated limits. "
        },
        "maxPercentDeltaUnhealthyApplications": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of applications health degradation allowed during cluster upgrades. The delta is measured between the state of the applications at the beginning of upgrade and the state of the applications at the time of the health evaluation. The check is performed after every upgrade domain upgrade completion to make sure the global state of the cluster is within tolerated limits. System services are not included in this."
        }
      },
      "required": [
        "maxPercentDeltaUnhealthyNodes",
        "maxPercentUpgradeDomainDeltaUnhealthyNodes",
        "maxPercentDeltaUnhealthyApplications"
      ],
      "description": "Describes the delta health policies for the cluster upgrade."
    },
    "ClusterUpgradePolicy": {
      "type": "object",
      "properties": {
        "forceRestart": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
        },
        "upgradeReplicaSetCheckTimeout": {
          "type": "string",
          "description": "The maximum amount of time to block processing of an upgrade domain and revent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "healthCheckWaitDuration": {
          "type": "string",
          "description": "The length of time to wait after completing an upgrade domain before performing health checks. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "healthCheckStableDuration": {
          "type": "string",
          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. The duration can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "healthCheckRetryTimeout": {
          "type": "string",
          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "upgradeTimeout": {
          "type": "string",
          "description": "The amount of time the overall upgrade has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "upgradeDomainTimeout": {
          "type": "string",
          "description": "The amount of time each upgrade domain has to complete before the upgrade rolls back. The timeout can be in either hh:mm:ss or in d.hh:mm:ss.ms format."
        },
        "healthPolicy": {
          "anyOf": [
            {
              "$ref": "#/definitions/ClusterHealthPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The cluster health policy used when upgrading the cluster."
        },
        "deltaHealthPolicy": {
          "anyOf": [
            {
              "$ref": "#/definitions/ClusterUpgradeDeltaHealthPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The delta health policy used when upgrading the cluster."
        }
      },
      "required": [
        "upgradeReplicaSetCheckTimeout",
        "healthCheckWaitDuration",
        "healthCheckStableDuration",
        "healthCheckRetryTimeout",
        "upgradeTimeout",
        "upgradeDomainTimeout",
        "healthPolicy"
      ],
      "description": "Describes the policy used when upgrading the cluster."
    },
    "ClusterVersionDetails": {
      "type": "object",
      "properties": {
        "codeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster."
        },
        "supportExpiryUtc": {
          "type": "string",
          "description": "The date of expiry of support of the version."
        },
        "environment": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "Windows",
                "Linux"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Indicates if this version is for Windows or Linux operating system."
        }
      },
      "description": "The detail of the Service Fabric runtime version result"
    },
    "DiagnosticsStorageAccountConfig": {
      "type": "object",
      "properties": {
        "storageAccountName": {
          "type": "string",
          "description": "The Azure storage account name."
        },
        "protectedAccountKeyName": {
          "type": "string",
          "description": "The protected diagnostics storage key name."
        },
        "blobEndpoint": {
          "type": "string",
          "description": "The blob endpoint of the azure storage account."
        },
        "queueEndpoint": {
          "type": "string",
          "description": "The queue endpoint of the azure storage account."
        },
        "tableEndpoint": {
          "type": "string",
          "description": "The table endpoint of the azure storage account."
        }
      },
      "required": [
        "storageAccountName",
        "protectedAccountKeyName",
        "blobEndpoint",
        "queueEndpoint",
        "tableEndpoint"
      ],
      "description": "The storage account information for storing Service Fabric diagnostic logs."
    },
    "EndpointRangeDescription": {
      "type": "object",
      "properties": {
        "startPort": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Starting port of a range of ports"
        },
        "endPort": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "End port of a range of ports"
        }
      },
      "required": [
        "startPort",
        "endPort"
      ],
      "description": "Port range details"
    },
    "NamedPartitionSchemeDescription": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "PartitionScheme": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Named"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "Count": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The number of partitions."
        },
        "Names": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Array of size specified by the ‘Count’ parameter, for the names of the partitions."
        },
        "PartitionScheme": {
          "type": "string"
        }
      },
      "required": [
        "Count",
        "Names",
        "PartitionScheme"
      ],
      "description": "Describes the named partition scheme of the service."
    },
    "NodeTypeDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the node type."
        },
        "placementProperties": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run."
        },
        "capacities": {
          "anyOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has."
        },
        "clientConnectionEndpointPort": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The TCP cluster management endpoint port."
        },
        "httpGatewayEndpointPort": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The HTTP cluster management endpoint port."
        },
        "durabilityLevel": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "Bronze",
                "Silver",
                "Gold"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "applicationPorts": {
          "anyOf": [
            {
              "$ref": "#/definitions/EndpointRangeDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The range of ports from which cluster assigned port to Service Fabric applications."
        },
        "ephemeralPorts": {
          "anyOf": [
            {
              "$ref": "#/definitions/EndpointRangeDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The range of empheral ports that nodes in this node type should be configured with."
        },
        "isPrimary": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
        },
        "vmInstanceCount": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The number of nodes in the node type. This count should match the capacity property in the corresponding VirtualMachineScaleSet resource."
        },
        "reverseProxyEndpointPort": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The endpoint used by reverse proxy."
        }
      },
      "required": [
        "name",
        "clientConnectionEndpointPort",
        "httpGatewayEndpointPort",
        "isPrimary",
        "vmInstanceCount"
      ],
      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
    },
    "PartitionSchemeDescription": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "PartitionScheme": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "PartitionSchemeDescription"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/NamedPartitionSchemeDescription"
            }
          ],
          "properties": {
            "PartitionScheme": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Named"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/SingletonPartitionSchemeDescription"
            }
          ],
          "properties": {
            "PartitionScheme": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Singleton"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/UniformInt64RangePartitionSchemeDescription"
            }
          ],
          "properties": {
            "PartitionScheme": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "UniformInt64Range"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "PartitionScheme": {
          "type": "string"
        }
      },
      "required": [
        "PartitionScheme"
      ],
      "description": "Describes how the service is partitioned."
    },
    "RollingUpgradeMonitoringPolicy": {
      "type": "object",
      "properties": {
        "healthCheckWaitDuration": {
          "type": "string"
        },
        "healthCheckStableDuration": {
          "type": "string"
        },
        "healthCheckRetryTimeout": {
          "type": "string"
        },
        "upgradeTimeout": {
          "type": "string"
        },
        "upgradeDomainTimeout": {
          "type": "string"
        }
      },
      "description": "The policy used for monitoring the application upgrade"
    },
    "ServiceCorrelationDescription": {
      "type": "object",
      "properties": {
        "Scheme": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "Invalid",
                "Affinity",
                "AlignedAffinity",
                "NonAlignedAffinity"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "ServiceName": {
          "type": "string"
        }
      },
      "required": [
        "Scheme",
        "ServiceName"
      ],
      "description": "Creates a particular correlation between services."
    },
    "ServiceLoadMetricDescription": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
        },
        "Weight": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "Zero",
                "Low",
                "Medium",
                "High"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "PrimaryDefaultLoad": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
        },
        "SecondaryDefaultLoad": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
        },
        "DefaultLoad": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
        }
      },
      "required": [
        "Name"
      ],
      "description": "Specifies a metric to load balance a service during runtime."
    },
    "ServicePlacementPolicyDescription": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "Type": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "ServicePlacementPolicyDescription"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "Type": {
          "type": "string"
        }
      },
      "required": [
        "Type"
      ],
      "description": "Describes the policy to be used for placement of a Service Fabric service."
    },
    "ServiceProperties": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "serviceKind": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "ServiceProperties"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/StatelessServiceProperties"
            }
          ],
          "properties": {
            "serviceKind": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Stateless"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/StatefulServiceProperties"
            }
          ],
          "properties": {
            "serviceKind": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Stateful"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "placementConstraints": {
          "type": "string",
          "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
        },
        "correlationScheme": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceCorrelationDescription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "serviceLoadMetrics": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceLoadMetricDescription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "servicePlacementPolicies": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServicePlacementPolicyDescription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "defaultMoveCost": {
          "anyOf": [
            {
              "type": "string",
              "enum": [
                "Zero",
                "Low",
                "Medium",
                "High"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "serviceTypeName": {
          "type": "string",
          "description": "The name of the service type"
        },
        "partitionDescription": {
          "anyOf": [
            {
              "$ref": "#/definitions/PartitionSchemeDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "serviceKind": {
          "type": "string"
        }
      },
      "required": [
        "serviceKind"
      ],
      "description": "The service resource properties."
    },
    "ServiceTypeHealthPolicy": {
      "type": "object",
      "properties": {
        "MaxPercentUnhealthyPartitionsPerService": {
          "anyOf": [
            {
              "type": "integer",
              "default": "0"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of unhealthy partitions per service. Allowed values are Byte values from zero to 100\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions. Default percentage is zero.\n"
        },
        "MaxPercentUnhealthyReplicasPerPartition": {
          "anyOf": [
            {
              "type": "integer",
              "default": "0"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of unhealthy replicas per partition. Allowed values are Byte values from zero to 100.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas. Default percentage is zero.\n"
        },
        "MaxPercentUnhealthyServices": {
          "anyOf": [
            {
              "type": "integer",
              "default": "0"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum maximum allowed percentage of unhealthy services. Allowed values are Byte values from zero to 100.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services. Default percentage is zero.\n"
        }
      },
      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n"
    },
    "ServiceTypeHealthPolicyMapItem": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key of the service type health policy map item. This is the name of the service type."
        },
        "Value": {
          "anyOf": [
            {
              "$ref": "#/definitions/ServiceTypeHealthPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "description": "Defines an item in ServiceTypeHealthPolicyMap.\n"
    },
    "SettingsParameterDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The parameter name of fabric setting."
        },
        "value": {
          "type": "string",
          "description": "The parameter value of fabric setting."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "description": "Describes a parameter in fabric settings of the cluster."
    },
    "SettingsSectionDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The section name of the fabric settings."
        },
        "parameters": {
          "anyOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SettingsParameterDescription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The collection of parameters in the section."
        }
      },
      "required": [
        "name",
        "parameters"
      ],
      "description": "Describes a section in the fabric settings of the cluster."
    },
    "SingletonPartitionSchemeDescription": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "PartitionScheme": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Singleton"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "PartitionScheme": {
          "type": "string"
        }
      },
      "required": [
        "PartitionScheme"
      ],
      "description": "Describes the partition scheme of a singleton-partitioned, or non-partitioned service."
    },
    "StatefulServiceProperties": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "serviceKind": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Stateful"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "hasPersistedState": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false."
        },
        "targetReplicaSetSize": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The target replica set size as a number."
        },
        "minReplicaSetSize": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The minimum replica set size as a number."
        },
        "replicaRestartWaitDuration": {
          "type": "string",
          "format": "date-time",
          "description": "The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format (hh:mm:ss.s)."
        },
        "quorumLossWaitDuration": {
          "type": "string",
          "format": "date-time",
          "description": "The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format (hh:mm:ss.s)."
        },
        "standByReplicaKeepDuration": {
          "type": "string",
          "format": "date-time",
          "description": "The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format (hh:mm:ss.s)."
        },
        "serviceKind": {
          "type": "string"
        }
      },
      "required": [
        "serviceKind"
      ],
      "description": "The properties of a stateful service resource."
    },
    "StatelessServiceProperties": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "serviceKind": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "Stateless"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "instanceCount": {
          "anyOf": [
            {
              "type": "integer",
              "minimum": -1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The instance count."
        },
        "serviceKind": {
          "type": "string"
        }
      },
      "required": [
        "serviceKind"
      ],
      "description": "The properties of a stateless service resource."
    },
    "UniformInt64RangePartitionSchemeDescription": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "PartitionScheme": {
              "anyOf": [
                {
                  "type": "string",
                  "enum": [
                    "UniformInt64Range"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "Count": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The number of partitions."
        },
        "LowKey": {
          "type": "string",
          "description": "String indicating the lower bound of the partition key range that\nshould be split between the partition ‘Count’\n"
        },
        "HighKey": {
          "type": "string",
          "description": "String indicating the upper bound of the partition key range that\nshould be split between the partition ‘Count’\n"
        },
        "PartitionScheme": {
          "type": "string"
        }
      },
      "required": [
        "Count",
        "LowKey",
        "HighKey",
        "PartitionScheme"
      ],
      "description": "Describes a partitioning scheme where an integer range is allocated evenly across a number of partitions."
    },
    "VersionProperties": {
      "type": "object",
      "properties": {
        "appPackageUrl": {
          "type": "string",
          "description": "The URL to the application package"
        }
      },
      "required": [
        "appPackageUrl"
      ],
      "description": "The properties of the version resource."
    }
  }
}
